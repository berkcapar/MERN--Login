{"version":3,"sources":["services/login.js","services/signup.js","components/LoginForm.js","components/Toggleable.js","components/SignupForm.js","App.js","index.js"],"names":["login","credentials","a","axios","post","response","data","signup","newUser","LoginForm","handleSubmit","handleEmailChange","handlePasswordChange","email","password","onSubmit","type","name","value","onChange","Togglable","props","useState","visible","setVisible","hideComponent","display","showComponent","toggleVisibility","style","onClick","buttonLabel","children","SignupForm","addUser","handleNewNameChange","handleNewEmailChange","handleNewPasswordChange","newName","newEmail","newPassword","App","setEmail","setPassword","user","setUser","users","setUsers","setNewName","setNewEmail","setNewPassword","setErrorMessage","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","removeItem","target","signupService","then","returnedUser","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ead77e7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data   \n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/signup'\n\n\nconst signup = async newUser => {\n    const response  = await axios.post(baseUrl, newUser)\n    return response.data\n}\n\nexport default { signup }\n\n\n\n","import React from 'react'\n\nconst LoginForm = ({\n    handleSubmit,\n    handleEmailChange,\n    handlePasswordChange,\n    email,\n    password\n}) => {\n    return ( \n        <div>\n     <h2>Giriş Yap</h2>\n    <form onSubmit = {handleSubmit}>    \n      <div>\n      email:\n      <input \n      type=\"text\"\n      name=\"name\"\n      value={email}\n      onChange={handleEmailChange}\n      /> \n       </div>\n       <div> \n       password:\n      <input \n      type=\"text\"\n      name=\"name\"\n      value={password}\n      onChange={handlePasswordChange}\n      />  \n      </div>\n      <button type=\"submit\">Giriş Yap</button>\n    </form>\n  </div>\n  )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst Togglable = (props) =>{\n    const [visible, setVisible] = useState(false)\n\n\nconst hideComponent = {display: visible ? 'none': ''}\nconst showComponent = {display: visible ? '' : 'none'}\n\n\nconst toggleVisibility = () =>{\n    setVisible(!visible)\n}\n\nreturn ( \n    <div>\n        <div style={hideComponent}>\n            <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n        </div>\n        <div style= {showComponent}>\n            {props.children}\n            <button onClick = {toggleVisibility}>cancel</button>\n        </div>\n    </div>\n)\n}\nexport default Togglable","import React from 'react'\n\n\nconst SignupForm = ({\n    addUser,\n    handleNewNameChange,\n    handleNewEmailChange,\n    handleNewPasswordChange,\n    newName,\n    newEmail,\n    newPassword\n}) => { \n    return ( \n        <div> \n           <h2>Join Now! </h2> \n    <form onSubmit={addUser}>\n      <div>\n        Name:\n      <input\n      type = \"text\"    \n      value = {newName}\n      name = \"New Name\"\n      onChange = {handleNewNameChange}\n  />\n      </div>    \n     <div>\n       Email:\n       <input\n       type = \"text\"\n       value = {newEmail}\n       name = \"New Email\" \n       onChange = {handleNewEmailChange}\n       />\n        </div>\n        <div>    \n       Password: \n       <input\n       type = \"password\"\n       value = {newPassword}\n       name = \"New Password\"\n       onChange = {handleNewPasswordChange}\n       />\n     </div>\n     <button type=\"submit\">Join!</button>\n    </form>\n    </div>\n  )\n}\n\nexport default SignupForm\n  \n  \n\n","import React, { useState, useEffect } from 'react';\nimport loginService from './services/login' \nimport signupService from './services/signup'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Toggleable';\nimport SignupForm from './components/SignupForm';\n\nconst App = () => {\n\nconst [email, setEmail] = useState('')\nconst [password, setPassword] = useState('')\nconst [user, setUser] = useState(null)\nconst [users, setUsers] = useState([])\nconst [newName, setNewName] = useState('')\nconst [newEmail, setNewEmail] = useState('')\nconst [newPassword, setNewPassword] = useState('')\nconst [errorMessage, setErrorMessage] = useState(null)\n\n\nconst addUser = (event) =>{\n  event.preventDefault()\n  const newUser = {\n    name: newName,\n    email: newEmail,\n    password:newPassword\n  }\n  signupService\n  .signup(newUser)\n  .then(returnedUser=>{\n    setUsers(users.concat(returnedUser))\n\n  })\n}\n\n\nuseEffect(()=>{\n  const loggedUserJSON = window.localStorage.getItem('loggedUser')\n  if(loggedUserJSON){\n    const user = JSON.parse(loggedUserJSON)\n    setUser(user)\n  }\n},[])\n\nconst handleLogin = async (event) => {\nevent.preventDefault()\ntry {\n  const user = await loginService.login({\n    email, password\n  })\n  window.localStorage.setItem(\n    'loggedUser', JSON.stringify(user)\n  )\nsetUser(user)\nsetEmail('')\nsetPassword('')\n} catch(execption){\n  setErrorMessage('Wrong credentials')\n  setTimeout(()=>{\n    setErrorMessage(null)\n  },5000)\n}\n}\n\nconst logoutUser = () =>\n  localStorage.removeItem('loggedUser')\n\nconst handleLogout = () => {\n  setUser(null)\n  logoutUser()\n}\n\nif (!user){\nreturn ( \n  <div> \n  <Togglable buttonLabel = 'login'> \n  <LoginForm\n  email = {email}\n  password = {password}\n  handleEmailChange = {({target}) => setEmail(target.value)}\n  handlePasswordChange = {({target})=>setPassword(target.value)}\n  handleSubmit = {handleLogin}\n  />\n  </Togglable>\n <div>\n\n<Togglable buttonLabel = 'Join'>\n<SignupForm\n  name = {newName}\n  email = {newEmail}\n  password = {newPassword}\n  handleNewNameChange = {({target})=>setNewName(target.value)}\n  handleNewEmailChange = {({target})=>setNewEmail(target.value)}\n  handleNewPasswordChange = {({target})=>setNewPassword(target.value)}\n  onSubmit = {addUser}\n  />\n\n</Togglable>\n</div>\n</div>\n\n\n  )\n}\n\n\nreturn ( \n  <div>\n    <div>\n      <p>{user.name} logged in</p>\n      \n      <button onClick={handleLogout}>Log Out!</button>    \n    </div>\n  \n  </div>\n)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}